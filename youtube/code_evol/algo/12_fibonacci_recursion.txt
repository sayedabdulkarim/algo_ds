    expect
    ///
    fib(2) - [0,1]
    fib(3) - [0,1,1]
    fib(4) - [0,1,1, 2]


function fib(num){
    var res = []

    for(i = 0; i<num; i++){

        if(res.length < 2 ){
            res.push(i)
        } else {
            res.push(res[res.length - 1] + res[res.length - 2])
        }
        
    }

    return res
    
}

recursionw way
---------------

function rFib(num){
    
    // base condition for terminate the recursion

    if(num < 2){
        return num
    } 


    return rFib(num-1) + rFib(num-2)
}

time complexity
/////////////////
O(2 * n)